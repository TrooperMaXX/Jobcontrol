package de.hoell.jobcontrol.ticketlist;import android.app.ListActivity;import android.app.ProgressDialog;import android.content.Context;import android.os.AsyncTask;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.Button;import android.widget.Toast;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.ArrayList;import java.util.Date;import java.util.HashMap;import java.util.Locale;import java.util.concurrent.ExecutionException;import java.util.concurrent.TimeUnit;import java.util.concurrent.TimeoutException;import de.hoell.jobcontrol.R;import de.hoell.jobcontrol.adapter.SpecialAdapter;import de.hoell.jobcontrol.query.Functions;/** * Created by Hoell on 11.02.2015. */public class Historie_Activity extends ListActivity {    private static final String TAG_SUCCESS = "success";    ArrayList<HashMap<String, String>> mylist = new ArrayList<HashMap<String, String>>();    private int anfang;    private String Seriennummer;    @Override    protected void onCreate(Bundle savedInstanceState) {        anfang=0;        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_historie);        Button Button_next = (Button) findViewById(R.id.button_next);        Seriennummer = getIntent().getStringExtra("value_seriennummer");        if (!Seriennummer.equals("99")){            Log.e("anfang","anfangstart"+anfang);            try {                new JSONHistorie(getApplicationContext(),Seriennummer,anfang).execute().get(30000, TimeUnit.MILLISECONDS);            } catch (InterruptedException | ExecutionException | TimeoutException e) {                e.printStackTrace();            }            ;        }        else{            Toast.makeText(this, "Ungültige Seriennummer NEUE Maschine?", Toast.LENGTH_SHORT).show();        }        Button_next.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                anfang =anfang+15;                Log.e("anfang","anfangclicked"+anfang);                new JSONHistorie(getApplicationContext(),Seriennummer,anfang).execute();            }        });    }    private class JSONHistorie extends AsyncTask<Integer, Integer, JSONObject> {        private Context mContext;        private String mSeriennummer;        private int mAnfang;        private ProgressDialog pDialog ;        private   int letzter;        public JSONHistorie(Context context, String Seriennummer, int anfang){            mContext = context;            mSeriennummer =Seriennummer;            mAnfang=anfang;            Log.e("anfang","anfanginhistoreieasync"+anfang);        }        @Override        protected void onPreExecute()        {            super.onPreExecute();            pDialog = new ProgressDialog(Historie_Activity.this);            pDialog.setMessage("Working ...");            pDialog.setIndeterminate(false);            pDialog.setCancelable(true);            pDialog.show();        }        @Override        protected JSONObject doInBackground(Integer... args) {            Functions Function = new Functions();            JSONObject json=null;            json = Function.Historie(mSeriennummer,mAnfang);            Log.d("Create Response", json.toString());            return json;        }        @Override        protected void onPostExecute(JSONObject jsonh) {            if (mAnfang==0){            }else{                letzter=mylist.size();            }            try {                int success = jsonh.getInt(TAG_SUCCESS);                if (success == 1) {                    JSONArray jsonarray_his = jsonh.getJSONArray("historie");                    for (int i = 0; i < jsonarray_his.length() ; i++) {                        JSONObject his = jsonarray_his.getJSONObject(i);                        JSONArray hispos = his.getJSONArray("positionen");                        for (int k =0; k < hispos.length(); k++){                            HashMap<String, String> map = new HashMap<String, String>();                            JSONObject pos = hispos.getJSONObject(k);                            map.put("Z1","S/W: "+his.getString("hiszaehlerstand1"));                            map.put("Z2","Farbe: "+his.getString("hiszaehlerstand2"));                            String posdatum = pos.getString("hisdatum_date");                            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd", Locale.GERMAN);                            SimpleDateFormat edf = new SimpleDateFormat("dd-MM-yyyy", Locale.GERMAN);                            Date datum = sdf.parse(posdatum);                            String formattedDate = edf.format(datum);                            map.put("Datum", formattedDate);                            map.put("Technr","TechNr: "+pos.getString("histecnr"));                            map.put("Texte",pos.getString("Texte"));                            mylist.add(map);                        }                    }                }                else{                    Toast.makeText(mContext, "Keine Historie verfügbar", Toast.LENGTH_SHORT).show();                    System.out.println("Y U NOT FUNCTION...");                }            } catch (JSONException | ParseException e) {                e.printStackTrace();            }            Log.e("mylist", mylist.toString());            setListAdapter(new SpecialAdapter(mContext, mylist, R.layout.row_his,                    new String[] {"Datum","Technr","Z1","Z2", "Texte" }, new int[] {R.id.DATUM_CELL, R.id.TECHNR_CELL, R.id.Z1_CELL,R.id.Z2_CELL, R.id.TXT_CELL, }));            setSelection (letzter);            pDialog.dismiss();        }    }}